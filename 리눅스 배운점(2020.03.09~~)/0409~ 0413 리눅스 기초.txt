1. 7장

-1차시

우분투의 bash 셸

bash 셸의 특징

alias 기능 >> 명령어 단축기능

History 기능 , 연산기능 , job control 기능 , 자동이름 완성기능(tap)
프롬프트 제어 기능 , 명령 편집 기능

셸의 명령문 처리 방법

>> 명령어 [옵션] [인자]
ex) rm -rf /mydir

환경변수 >> echo $PATH or HOME 등등 으로 경로를 확인가능

또 export 환경변수 = 값 으로 환경변수의 값을 변경가능

주요 환경변수는(구글에 검색)



@@@@셸 스크립트 프로그래밍@@@@

>> C언어와 유사하게 프로그래밍이 가능 , 변수 , 반복문, 제어문 등의 사용이 가능
별도로 컴파일 하지않고 텍스트파일 형태로 실행

vi나 gedit 으로 작성이 가능, 리눅스의 많은 부분이 셸스크립트로 작성

예시

name.sh 라는 스크립트 파일을 만든다 내용은

#!/bin/sh
echo "사용자 이름 : " $USER
echo "홈 디렉터리 : " $USER
exit 0 

를 입력해주면 사용자이름과 홈디렉터리가 나온다.
실행할떄 sh name.sh 를 입력해주면 된다.

./ 은 현재 디렉터리를 말한다.

변수의 기본

변수를 사용하기 전에 미리 선언하지 않으며, 변수에 처음 값이 할당되면서 자동으로 변수가 생성

모든 변수는 문자열로 취급

변수 이름은 대소문자 구분, 변수를 대입할때 '=' 좌우에는 공백이 없어야한다.

trval=HOME 형식으로 해주어야한다 굳이 공백을 줘야한다면

trval="HO ME" 형태로 하면 된다.

또 계산을 하려면

expr을 사용해야한다. 변수에 대입된 값은 모두 문자열로 취급하기 떄문

역따옴표를 사용 , 수식에 괄호 또는 곱하기는 그앞에 꼭 역슬래쉬 를 붙인다.

ex) 
#!/bin/sh

num1=100
num2=$num1 + 200	>> 100+200
echo $num2
num3='expr $num1 + 200'	>> 300
echo $num3
num4='expr \( $num1 + 200 \) / 10 \*2' 	>> 60
echo $num4
exit 0


파라미터 변수

ex) 

명령			apt-get		-y		install		gftp
	
파라미터 변수		$0		$1		$2		$3


#!/bin/sh
echo "실행파일 이름 <$0> 이다"
echo "첫번째 파라미터는 <$1> 이고, 두번째 파라미터는 <$2> 다"
echo "전체 파라미터는 <$*>다"
exit 0



기본 if문

형식 >> 

if [조건]
then
	참일 경우 실행
fi 				>> (if문 종료인듯)

ex)

#!/bin/sh

if [ "woo" != "woo" ]
then
	echo "참입니다."
else
	echo "거짓입니다."
fi
exit 0


조건문에 들어가는 비교연산자

처음보는것들만 적음))

-n "문자열"	>> 문자열이 NULL이 아니면 참
-z "문자열"	>> 문자열이 NULL이면 참

수식1 -eq 수식2 >> 두수식이 같으면 참
수식1 -ne 수식2 >> 두수식이 같지 않으면 참
수식1 -gt 수식2 >> 수식 1이 크다면 참
수식1 -ge 수식2 >> 수식 1이 크거나 같다면 참
수식1 -lt 수식2 >> 수식 1이 작으면 참
수식1 -le 수식2 >> 수식 1이 작거나 같다면 참
!수식 >> 수식이 거짓이라면 참


#!/bin/sh

if [ 100 -eq 200 ]
then
	echo "100과 200은 같다."
else
	echo "100과 200은 다르다."
fi
exit 0
>> 출력 >> 100과 200은 다르다.


파일과 관련된 조건

-d 파일이름 >> 파일이 디렉터리면 참
-e 파일이름 >> 파일이 존재하면 참
-f 파일이름 >> 파일이 일반 파일이면 참
-g 파일이름 >> 파일에 set-group-id가 설정되면 참
-r 파일이름 >> 파일이 읽기 가능이면 참
-s 파일이름 >> 파일 크기가 0이 아니면 참
-u 파일이름 >> 파일에 set-user-id가 설정되면 참
-w 파일이름 >> 파일이 쓰기 가능 상태이면 참
-x 파일이름 >> 파일이 실행 가능상태이면 참


ex)
#!/bin/sh

fname=/lib/systemd/system/cron.service
if [ -f $fname ]
then
	head -5 $fname
else
	echo "cron 서버가 설치되지 않았습니다."
fi
exit 0




case ~ esac 문

ex)

#!/bin/sh
case "$1" in
	start)
		echo "시작~~";;
	stop)
		echo "중지~~";;
	restart)
		echo "다시시작~~";;
	*)
		echo "뭔지 모름~~";;
esac
exit 0

sh case1.sh stop 를 실행하면 "중지~~" 가 출력됨


#!/bin/sh
echo "리눅스가 재미있나요? (yes / no)"
read answer
case $answer in
	yes |y|Y|yes|YES)
		echo "다행입니다."
		echo "더욱 열심히 하세요.";;
	[nN]*)
		echo "안타깝네요.";;
	*)
		echo "yes 아니면 no만 입력하세요."
		exit 1;;
esac
exit 0




-2-


AND , OR 관계 연산자

ex)
#!/bin/sh
echo "보고 싶은 파일명을 입력하세요."
read fname
if [ -f $fname ] && [ -s $fname ] ; then
	head -5 $fname
else
	echo "파일이 없거나, 크기가 0입니다."
fi
exit 0


반복문 for ~ in문
for 변수 in 값
do
	반복할 문잔
done


ex)
#!/bin/sh
hap = 0
for i in 1 2 3 4 5 6 7 8 9 10
do
	hap='expr $hap +$i'
done
echo "1부터 10까지의 합:"$hap
exit 0



while문

#!/bin/sh
while [ 1 ]
do 
	echo "우분투 16.04LTS"
done
exit 0


#!/bin/sh
hap=0
i=1
while [$i -le 10 ]
do
	hap='expr $hap + $i'
	i='expr $i + 1'
done
echo "1부터 10까지의 합 : "$hap
exit 0


예를들어 비밀번호 반복문

#!/bin/sh
echo "비밀번호를 입력하세요."
read mypass
while [ $mypass != "1234" ]
do
	echo "틀렸음. 다시입력"
	read mypass
done
echo "통과"
exit 0



또 until문은 

>> whle문과 용도가 거의 같지만 until문은 조건식이 참일때까지(거짓인 동안) 계속 반복한다.

작성한 위의 예시를 동일한 용도로 until문으로 바꾸려면 4행 조건을 until [ $i -gt 10 ] 으로 바꾸어주면된다.


이렇게 리눅스에서 프로그래밍을 할수가있다. 더 많은 정보들이있지만 리눅스에서 프로그래밍을 할떄 다시 공부하도록하자.




8장


open SSH 서버
>> 텔넷과 용도는 동일 , 보안이 강화

텔넷과 거의 동일하지만 데이터를 전송할떄 암호화를 한다는 점이 다름

>>원격지에서 보안이 강화된 서버 접속할 경우 필요

openssh 서버 설치과정

ssh 서버  설치 / 가동	>> 방화벽 설정	>>	리눅스 클라이언트 에서 접속 , 윈도우 클라이언트에서 접속 >> 한글 putty 설치



우분투에서 

apt-get -y install openssh-server 명령어를 입력해 설치	 그리고 systemctl restart ssh 를 입력
systemctl status ssh 입력해서 상태 보기
ufw allow 22/tcp 로 22번 포트 열기

그리고 다른 우분투에 접속해서 

ssh 사용자명@서버IP 입력  그리고 패스워드를 입력하면 연결이됨.

그리고또 윈도우에서 putty로 ip주소를 입력하고 한글이 꺠지지않게  UTP-8을 설정후 접속하면 된다.


(내가 보기엔 다 조건이 포트를 연 가상 VM은 열려있어야 다른 곳에서도 ssh 나 텔넷을 통해서 접속할수 있는거같다.)



VNC 서버구축

>> 원격지에서 X윈도우 모드로 접속할 경우 필요
VNC 서버 설치 과정 요약

>>

VNC 서버 설치 ( apt-get install vnc4server )
서버 설정 파일 수정 ( xstartup 파일 )
VNC 서비스 가동 ( vncserver : 1 )
방화벽 설정 ( ufw allow 5901/tcp )
vnc 클라이언트 설치 ( 리눅스 : apt-get install xtightvncviewer	윈도우 : www.tigervnc.com )
vnc 클라이언트 실행 ( 리눅스 : vncviewer ip:번호 		윈도우 : TigerVNC Viewer 실행 )
해상도 조절 ( 옵션의 Color level )



vncviewer IP주소	입력  패스워드를 입력하면 연결이됨.

윈도우도 위에 설치한 클라이언트를 실행해서 IP주소를 입력해 접속한다.



비교표

구분			텔넷서버			ssh서버			vnc서버


속도			빠르다.			빠르다.			많이 느리다.


그래픽 지원		지원 안한다.		지원 안한다.		지원한다.


보안			취약하다.			강하다.			취약하지만,SSH와 연동해 보완 가능하다.


사용 가능 명령어		텍스트모드의 명령어만	텍스트모드의 명령어만	제한없다.
			사용 할수 있다.		사용 할수 있다.


클라이언트 프로그램	대개의 운영체제가		리눅스는 기본적으로 있다.	별도로 설치해야한다.
			기본적으로 있다.		윈도우는 별도 설치해야한다.




결과 >> s
##sh를 기본적으로 사용하고 vnc서버는 설정만 해놓고 가동하지 않는다.원격지에서 ssh로 서버를 관리하다가 
	x윈도우 접속이 필요할 경우에는 접속된 ssh 접속창에서 vnc 서버를 구동하고 vnc 클라이언트로 접속해서 사용한다.

##텔넷 서버는 보안이 철저한 회사 내의 네트워크에서만 사용하면 무난하다.





