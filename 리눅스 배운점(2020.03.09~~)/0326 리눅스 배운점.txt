1. 36강

java의 폴더를 만들고 설치해놨던 jdk 폴더를 mv명령어를 이용해서 이동시킨다.

그후 java - version을 실행했을때 실행이 안된다. 이것을 실행시킬려면 링크파일을 만들거나 $PATH값을 추가해줘야되는데

이번에는 패스값을 추가하는 방법에대해서 알아보자

sudo nano /etc/environment 를 실행

**********************************************************************************************************************
컨트롤 z를 누르면 터미널로 나올수있다. 이것을 다시 편집장으로 돌아가고싶다면 fg1을 입력하면된다.
**********************************************************************************************************************

$PATH의 맨끝에 games(:/usr/local/java/"jdk.8.0_161/bin") 을 입력한다.

이렇게해도 안된다면

두가지방법이있다. 첫번째는 다시로그인하는 방법과

두번째는 소스를 이용하는것이다.

source /etc/environment 를 입력한다.

그리고 echo $PATH를 입력해서 입력이되어있는지 확인한다.
이러면 java -version이 실행된다.

다만 이방법이 사용되면 패스의 맨앞자리 home 이 내가 읽었던 현재 디렉토리로 바뀐다.
다시 원상 복귀하려면 source ~/.profile 을 입력해주면 다시 원래대로 돌아온다. 아니면 다시 재로그인하면된다.
(여러 계정에서도 이용가능)


2. 37강

패키지 설치

명령어 형식

>> dpkg -i packagename.deb(다른거에따라 툴도 다름) 

홈페이지로 설치하려면

wget 명령어 사용
**********************************************************************************************************************
홈페이지 : packges.ubuntu.com

(다운받기전에 구글링 검색하고 정확하게) 버전 선택
**********************************************************************************************************************

tree 검색해서 찾고 arm64 선택  아시아쪽 kr붙은거에 주소를 복사해서 리눅스에서 설치


또 명령어를 잘모르겠다면 dpkg -? 를 하게되면 여러 명령어들이 나타나서 필요한것을 사용해준다.


디렉토리의 구조를 보려면 tree 명령어를 입력하면된다 ( 설치후에 )

**********************************************************************************************************************

dpkg -l >> 현재 설치된 패지키들 다보여줌

dpkg -l tree >> tree가 설치되었는지 확인해줌

dpkg -L tree >> tree라는 애가 설치된곳을 말해줌

dpkg -r tree >> tree를 삭제함

dpkg -P tree >> 설정까지 다 지움

**********************************************************************************************************************


*******************************************************************************************************************************
오라클 접속 >> 다운로드 >> 자바 >> 리눅스 deb 다운 >> 압축풀어서 사용 그렇지만 (잘사용하지않음)
*******************************************************************************************************************************



3. 38강

향상된 패키지 관리 도구

>> /etc/apt/sources.list 에 도구들이 많이있음.

>> 위에 파일을 열면 많은 주소들이 있음(다 똑같은 한가지 주소  , 

다만 중간중간 내용이 좀 다름(다양한업데이트도 담김) 즉 여러가지내용들이 담김) 


**********************************************

여러 명령어들

apt-get install X	>> 설치

apt-get update >> 추가하고 이명령어를 입력해서 업데이트함.

apt-get dist-update >> 의존성 검사를 통한 목록 갱신

apt-cache search X	>> 검색

apt-cache show X >> 보기

apt-get remove X >> 제거

apt-get purge ㅌ >> 설정파일도 제거

**********************************************

apt-cache >> 저장소에있는 패키지들의 목록
***************************************************************************************
명령어들이 기억안나면 apt-cache 를 입력하면 사용가능한 명령어들이 나타남.
***************************************************************************************
apt-cache pkgnames >> 설치할수있는 패키지목록
apt-cache pkgnames | less >> 끊어서 패키지 목록을 볼수있음


apt-cache search jdk >> 목록중에서 jdk라는 이름을 가진파일을 찾아라 라는 명령어

apt-cache search jdk | grep >> grep을 입력하면 jdk에 색깔이 입혀져서 쉽게 확인이 가능함

또 패키지명만나오는게아니라 이게 무엇인지 간단한 설명도 나온다.

너무 설명이 길다하면

apt-cache pkgnames | grep jdk 를 입력하면 불필요한 설명들이 안나오고 깔끔한 목록을 볼수있다.

여기서 만약 자기가 원하는 파일을 찾았다면

***************************************************************************************
(만약 명령어가 기억나지않으면)
apt -get	를 입력해서 명령어를 확인
***************************************************************************************

sudo apt -get install openjdk-11-jdk 를 입력하면 설치가 진행된다.

***************************************************************
그리고 java -version 라는 명령어를 실행하면 잘 실행된다.
***************************************************************

whereis java를 입력하면 java가 있는 경로들을 확인할수있다.

/user/bin/java 로바뀌게되는데 이것이 우리가 openjdk에서 설치한 11버전의 jdk 이다.










