# RGB 거리

# N개의 집 1번집부터 ~ N번 집 순서대로
# 집은 빨강 , 초록 , 파랑 중 하나의색으로 칠해야함
# 1번과 2번은 색이 같지않아야함 즉 수열
# 즉  N번쨰 집의 색은 N-1 집의 색과 같지 않아야함.

# N-1 ~ N+1 까지 같지않아야함

# 비용 <= 1000

# i는 2<= i <= N-1


        # 최솟값 구한 공식

N = int(input())

S = []

for i in range(N):
    S.append(list(map(int,input().split())))

# 0 빨강  1  초록  2  파랑   
# S[i][0]는  i번쨰 집을 빨강으로 칠했을떄 최소값
# 이 3개의 값중 가장 작은값을 출력하면 됨

#print("S = \n", S)
#print('S의 [0][1]값',S[0][1])

for i in range(1,len(S)):
    S[i][0] = min(S[i-1][1], S[i-1][2]) + S[i][0]       # 빨강의 최소값
    S[i][1] = min(S[i-1][0], S[i-1][2]) + S[i][1]       # 초록의 최소값
    S[i][2] = min(S[i-1][0], S[i-1][1]) + S[i][2]       # 파랑의 최소값

print(min(S[N-1][0],S[N-1][1],S[N-1][2]))       # 이세게의 최소값 중 최소값
