import sys

n = int(sys.stdin.readline())

li = [list(map(int,sys.stdin.readline().split())) for _ in range(0,n)]
 
    #전부다 받아야하기때문에 0 ~ n 까지

for i in range(1,n):    # 첫째 줄에 삼각형의 크기 n(1 ≤ n ≤ 500)
    for j in range(len(li[i])):    # li[i][j]
        if j == 0: # 즉 맨 왼쪽의 정수
            li[i][j] += li[i-1][j]
        elif j==i:    # 맨 오른쪽의 정수
            li[i][j] += li[i-1][j-1]
        else:        # 가운데 숫자들 ( 즉 대각선 )
            li[i][j] += max(li[i-1][j],li[i-1][j-1])
                # (오른쪽과 왼쪽)
                
print(max(li[n-1]))





#설명

입력 받는 숫자가

          7
        3   8
      8   1   8
    2   7   4   4
  
 라고 생각하고 알고리즘을 생각해보자.
 
 일단은 빠르게 처리해야하기떄문에 sys함수를 쓰고 우리가 반복할 n을 받는다.
 
 li라는 리스트를 만들어서 0부터 n만큼 배열을 만들고
 
 이중배열이므로 반복문을 두개써서 알고리즘을 만든다.
 
 생각해보자 우리는 최댓값을 찾아야한다. 천천히 아래에서 위로 올라간다는 생각을 해보자. ( i-1 )
 
 그리고 아래에서 위로 올라가야하므로 즉 i-1 을 해야하므로 0부터는 시작하면 안되므로 1,n까지 시작한다.
 
 그리고 for i , for j 두개의 반복문을 만드는데 li[i][j] 이므로
 
 j가 0이면 맨 왼쪽 이므로 li[i-1][j]
 j가 i와 같으면 맨 오른쪽이라는 뜻이므로 li[i-1][j-1]
 
 이유 i=2 j=2 라고 했을때 위의 숫자에서 
 
 li[2][2] 는 맨 오른쪽 8 이다. 3일떄는 맨오른쪽 4이다 즉 
 li[i-1][j-1]가 성립한다는 뜻이다.
 
 이제 나머지는 가운데 숫자들과 대각선 문제인데 최댓값을 만들어야하므로 대각선중에 최댓값을 더하면 된다. 따라서
 li[i][j] = max(왼쪽,오른쪽) 해주면된다.
 li[i][j] = max(li[i-1][j], li[i-1][j-1])
 
 
 그리고
 출력 해주면 되는데
 
 print(max(li[n-1]))
 
 li의 여러 배열중에 (n-1) 중에 최댓값을 출력하면 된다.
