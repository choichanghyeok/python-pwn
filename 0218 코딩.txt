1.쇠막대기	(나중에다시 이해해야함)


풀이


def solution(arrangement):
    answer = 0  # 잘린 막대기 개수
    arrangement = list(arrangement) # 리스트화시킴
    b = 0 # 쇠막대기 개수
    
    
    while arrangement: # arrangement갯수만큼
        if arrangement[0] == "(":
            b +=1       # (열면 쇠막대기값 증가
            arrangement.pop(0)
            if arrangement[0] ==")": # 괄호가 () 일경우
                b -=1        # 닫으면 쇠막대기값 감소
                answer += b   # 쇠막대기 값만큼 잘린개수가 생기기때문에 총개수를 answer에 더한다. 
                arrangement.pop(0)
        else: # 쌍괄호가 이닌 ) 괄호 인경우
            arrangement.pop(0)
            b -=1 # 쇠막대기 개수는 감소하고
            answer +=1  # 조각난 개수는 증가
            
    return answer





#순서
#자르기
#리턴값





2.프린터	(나중에 다시 이해해야함)


풀이


def solution(priorities, location):
    pos = []
    
    for i in range(len(priorities)):
        if i == location:
            pos.append(True)
        else:
            pos.append(False)
            
    cnt = 0
    m = max(priorities)
    while True:
        if m > priorities[0]:
            priorities.append(priorities.pop(0))
            pos.append(pos.pop(0))
        else:
            cnt +=1
            priorities.pop(0)
            if pos.pop(0):
                return cnt
            m = max(priorities)
            



# 우선순위를 위해서 pos 배열을 열어둔다. 그리고 priorities 만큼 반복문을 돌리고 만약에 i가 우선순위
# 위치와 같다면 pos배열에 True 를 반환 아니면 False을 반환 그리고 cun변수와 중요도가 클수록 먼저
# 인쇄해야 하므로 max함수로 최댓값을 구한다. 그리고 while문을 실행한다. 만약에 최댓값이 priorities[0]
# 보다 크다면 priorities에 pop[0]와 pos에 pos.pop(0)를 보낸다. 먼저 우선순위로 프린트해낸다.
# 이게 아닌경우라면 cnt에 1을 증가시키고 priorities의 pop(0)을 실행하며 하나하나씩 프린트한다.
# 그리고 빼낼값이 더이상 없다면 cnt를 반환 항상 우선순위가 먼저인것을 프린트해야 하므로
# max(priorities)를 넣어둔다.




3. 124 나라의 숫자


풀이


def solution(n):
    answer = ''"
    
    while n > 0:
        n -=1
        answer = "124"[n%3] + answer
        n //= 3
        
    return answer


# answer이란 배열을 열어놓고 while문을 돌린다 n이 0이 아닐때까지 그러므로 n은 돌릴떄마다 1씩
# 감소 해야하고 answer은 일단 3진법이므로 일반적인 3진법이면 뒤에 0이생기는데 이것을 막기위해
# 나머지로 계산한다 즉 124반복이므로 "124"[n%3] 이된다 따라서 나머지가 012가 나오므로 이것으로
# 124가 반복된다. 그리고 n이크면 몫도 커지므로 구했던 answer을 더함으로써 답을 나오게한다.
# 그리고 3진법 이므로 n//= 3 n을 3으로 나눈다.







